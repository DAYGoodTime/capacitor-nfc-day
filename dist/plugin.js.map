{"version":3,"file":"plugin.js","sources":["esm/index.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst NFCPlug = registerPlugin('NFC');\nexport * from './definitions';\nexport const NFC = {\n    isSupported: NFCPlug.isSupported.bind(NFCPlug),\n    startScan: NFCPlug.startScan.bind(NFCPlug),\n    onRead: (func) => NFC.wrapperListeners.push(func),\n    onWrite: () => NFCPlug.addListener(`nfcWriteSuccess`, () => Promise.resolve()),\n    onError: (errFunc) => NFCPlug.addListener(`nfcError`, errFunc),\n    removeAllListeners: NFCPlug.removeAllListeners.bind(NFCPlug),\n    wrapperListeners: [],\n    async writeNDEF(options) {\n        var _a;\n        const ndefMessage = {\n            records: (_a = options === null || options === void 0 ? void 0 : options.records.map(record => {\n                const payload = typeof record.payload === \"string\"\n                    ? (new TextEncoder()).encode(record.payload)\n                    : Array.isArray(record.payload)\n                        ? new Uint8Array(record.payload)\n                        : record.payload instanceof Uint8Array\n                            ? record.payload\n                            : null;\n                if (!payload)\n                    throw (\"Unsupported payload type\");\n                return {\n                    type: record.type,\n                    payload\n                };\n            })) !== null && _a !== void 0 ? _a : [],\n        };\n        await NFCPlug.writeNDEF(ndefMessage);\n    }\n};\nconst decodeBase64 = (base64Payload) => atob(base64Payload).split('').map(char => char.charCodeAt(0));\nconst mapPayloadTo = (type, data) => {\n    return {\n        messages: data.messages.map(message => ({\n            records: message.records.map(record => ({\n                type: record.type,\n                payload: type === \"b64\"\n                    ? (new TextEncoder()).encode(btoa(String.fromCharCode(...record.payload)))\n                    : type === \"string\"\n                        ? decodeBase64((new TextDecoder()).decode(record.payload))\n                        : type === \"uint8Array\"\n                            ? new Uint8Array(decodeBase64((new TextDecoder()).decode(record.payload)))\n                            : type === \"numberArray\"\n                                ? Array.from(decodeBase64((new TextDecoder()).decode(record.payload)))\n                                : record.payload\n            }))\n        }))\n    };\n};\nNFCPlug.addListener(`nfcTag`, data => {\n    const wrappedData = {\n        strings() {\n            return mapPayloadTo(\"string\", data);\n        },\n        uint8Arrays() {\n            return mapPayloadTo(\"uint8Array\", data);\n        },\n        numberArrays() {\n            return mapPayloadTo(\"numberArray\", data);\n        }\n    };\n    for (const listener of NFC.wrapperListeners) {\n        listener(wrappedData);\n    }\n});\n//# sourceMappingURL=index.js.map"],"names":["registerPlugin"],"mappings":"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"}